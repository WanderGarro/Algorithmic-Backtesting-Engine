from indicators import RSI
from strategies import BaseStrategy
from pandas import DataFrame, Series

class RSIStrategy(BaseStrategy):
    """
    –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è RSI —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã—Ö–æ–¥–∞ –∏–∑ –∑–æ–Ω –ø–µ—Ä–µ–∫—É–ø–ª–µ–Ω–Ω–æ—Å—Ç–∏/–ø–µ—Ä–µ–ø—Ä–æ–¥–∞–Ω–Ω–æ—Å—Ç–∏.
    –û—Å—Ü–∏–ª–ª—è—Ç–æ—Ä–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è, —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–∞—è –Ω–∞ –±–æ–∫–æ–≤—ã—Ö –∏ ranging —Ä—ã–Ω–∫–∞—Ö.
    """

    def __init__(self, rsi_window: int = 14, overbought: int = 70, oversold: int = 30):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è RSI —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏.

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
            rsi_window (int, optional): –ü–µ—Ä–∏–æ–¥ —Ä–∞—Å—á–µ—Ç–∞ RSI (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 14)
            overbought (int, optional): –£—Ä–æ–≤–µ–Ω—å –ø–µ—Ä–µ–∫—É–ø–ª–µ–Ω–Ω–æ—Å—Ç–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 70)
            oversold (int, optional): –£—Ä–æ–≤–µ–Ω—å –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–Ω–Ω–æ—Å—Ç–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 30)

        –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ:
        –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —É—Ä–æ–≤–Ω–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∞–π–º—Ñ—Ä–µ–π–º–æ–≤:
            –î–Ω–µ–≤–Ω—ã–µ: 70/30 (–∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ)
            –ß–∞—Å–æ–≤—ã–µ: 80/20 (–±–æ–ª–µ–µ —Å—Ç—Ä–æ–≥–∏–µ)
            –ù–µ–¥–µ–ª—å–Ω—ã–µ: 65/35 (–º–µ–Ω–µ–µ —Å—Ç—Ä–æ–≥–∏–µ)
        """
        self.rsi_window = rsi_window
        self.overbought = overbought
        self.oversold = oversold

    def generate_signals(self, data: DataFrame) -> Series:
        """
        –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–∏–≥–Ω–∞–ª–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã—Ö–æ–¥–∞ RSI –∏–∑ —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã—Ö –∑–æ–Ω.

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
            data (DataFrame): –î–∞–Ω–Ω—ã–µ —Å —Ü–µ–Ω–∞–º–∏, –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∫–æ–ª–æ–Ω–∫—É 'close'

        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
            Series: –¢–æ—Ä–≥–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã: 1 (BUY), -1 (SELL), 0 (HOLD)

        –°—Ç—Ä–∞—Ç–µ–≥–∏—è:
            üü¢ –ü–æ–∫—É–ø–∫–∞: RSI –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ –∑–æ–Ω—ã –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–Ω–Ω–æ—Å—Ç–∏ (–≤—ã—à–µ 30)
            üî¥ –ü—Ä–æ–¥–∞–∂–∞: RSI –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ –∑–æ–Ω—ã –ø–µ—Ä–µ–∫—É–ø–ª–µ–Ω–Ω–æ—Å—Ç–∏ (–Ω–∏–∂–µ 70)
            ‚û°Ô∏è –î–µ—Ä–∂–∞—Ç—å:

        –†–∏—Å–∫–∏:
            –°—Ç–æ–ø-–ª–æ—Å—Å: –ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–∏–Ω–∏–º—É–º/–º–∞–∫—Å–∏–º—É–º
            –¢–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç: –ù–∞ —É—Ä–æ–≤–Ω–µ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω–æ–π RSI –∑–æ–Ω—ã
            –§–∏–ª—å—Ç—Ä: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±—ä–µ–º–æ–º –∏ —Ü–µ–Ω–æ–≤—ã–º –¥–µ–π—Å—Ç–≤–∏–µ–º

        –ü—Ä–∏–º–µ—Ä:
        >>> prices = DataFrame([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
        >>> strategy = RSIStrategy()
        >>> trend_signals = strategy.generate_signals(prices)
        """
        rsi = RSI.calculate(data['close'], self.rsi_window)

        signals = Series(0, index=data.index)

        # –ü–æ–∫—É–ø–∞–µ–º –∫–æ–≥–¥–∞ RSI –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ –∑–æ–Ω—ã –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–Ω–Ω–æ—Å—Ç–∏
        signals[(rsi > self.oversold) & (rsi.shift(1) <= self.oversold)] = 1

        #  –ü—Ä–æ–¥–∞–µ–º –∫–æ–≥–¥–∞ RSI –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ –∑–æ–Ω—ã –ø–µ—Ä–µ–∫—É–ø–ª–µ–Ω–Ω–æ—Å—Ç–∏
        signals[(rsi < self.overbought) & (rsi.shift(1) >= self.overbought)] = -1

        return signals

class RSIWithTrendStrategy(BaseStrategy):
    """
    –£—Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞–Ω–Ω–∞—è RSI —Å—Ç—Ä–∞—Ç–µ–≥–∏—è —Å —É—á–µ—Ç–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏—è.
    –ö–æ–º–±–∏–Ω–∏—Ä—É–µ—Ç –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–Ω–Ω–æ—Å—Ç—å/–ø–µ—Ä–µ–∫—É–ø–ª–µ–Ω–Ω–æ—Å—Ç—å —Å –º–æ–º–µ–Ω—Ç—É–º–æ–º –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤.
    """

    def __init__(self, rsi_window: int = 14, overbought: int = 70, oversold: int = 30):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è RSI —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ —Å —É—á–µ—Ç–æ–º —Ç—Ä–µ–Ω–¥–∞.

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
            rsi_window (int, optional): –ü–µ—Ä–∏–æ–¥ —Ä–∞—Å—á–µ—Ç–∞ RSI (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 14)
            overbought (int, optional): –£—Ä–æ–≤–µ–Ω—å –ø–µ—Ä–µ–∫—É–ø–ª–µ–Ω–Ω–æ—Å—Ç–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 70)
            oversold (int, optional): –£—Ä–æ–≤–µ–Ω—å –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–Ω–Ω–æ—Å—Ç–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 30)
        """
        self.rsi_window = rsi_window
        self.overbought = overbought
        self.oversold = oversold

    def generate_signals(self, data: DataFrame) -> Series:
        """
        –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–∏–≥–Ω–∞–ª–æ–≤ —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é –¥–≤–∏–∂–µ–Ω–∏—è RSI.

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
            data (DataFrame): –î–∞–Ω–Ω—ã–µ —Å —Ü–µ–Ω–∞–º–∏, –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∫–æ–ª–æ–Ω–∫—É 'close'

        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
            Series: –¢–æ—Ä–≥–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã: 1 (BUY), -1 (SELL), 0 (HOLD)

        –°—Ç—Ä–∞—Ç–µ–≥–∏—è:
            üü¢ –ü–æ–∫—É–ø–∫–∞: RSI –≤ –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–Ω–Ω–æ—Å—Ç–∏ (<30) –ò –Ω–∞—á–∏–Ω–∞–µ—Ç —Ä–∞—Å—Ç–∏
            üî¥ –ü—Ä–æ–¥–∞–∂–∞: RSI –≤ –ø–µ—Ä–µ–∫—É–ø–ª–µ–Ω–Ω–æ—Å—Ç–∏ (>70) –ò –Ω–∞—á–∏–Ω–∞–µ—Ç –ø–∞–¥–∞—Ç—å
            ‚û°Ô∏è –î–µ—Ä–∂–∞—Ç—å:

        –†–∏—Å–∫–∏:
            –°—Ç–æ–ø-–ª–æ—Å—Å: –ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–∏–Ω–∏–º—É–º/–º–∞–∫—Å–∏–º—É–º
            –¢–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç: –ù–∞ —É—Ä–æ–≤–Ω–µ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω–æ–π RSI –∑–æ–Ω—ã
            –§–∏–ª—å—Ç—Ä: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±—ä–µ–º–æ–º –∏ —Ü–µ–Ω–æ–≤—ã–º –¥–µ–π—Å—Ç–≤–∏–µ–º

        –ü–ª—é—Å—ã:
            –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ª–æ–∂–Ω—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤
            –£—á–µ—Ç –º–æ–º–µ–Ω—Ç—É–º–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞
            –ë–æ–ª–µ–µ —Ä–∞–Ω–Ω–∏–µ –≤—Ö–æ–¥—ã —á–µ–º –≤ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏

        –ü—Ä–∏–º–µ—Ä:
        >>> prices = DataFrame([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
        >>> strategy = RSIWithTrendStrategy()
        >>> trend_signals = strategy.generate_signals(prices)
        """
        rsi = RSI.calculate(data['close'], self.rsi_window)

        signals = Series(0, index=data.index)

        # –ü–æ–∫—É–ø–∞–µ–º –∫–æ–≥–¥–∞ RSI –Ω–∏–∂–µ 30 –∏ –Ω–∞—á–∏–Ω–∞–µ—Ç —Ä–∞—Å—Ç–∏
        buy_condition = (rsi < self.oversold) & (rsi > rsi.shift(1))
        signals[buy_condition] = 1

        # –ü—Ä–æ–¥–∞–µ–º –∫–æ–≥–¥–∞ RSI –≤—ã—à–µ 70 –∏ –Ω–∞—á–∏–Ω–∞–µ—Ç –ø–∞–¥–∞—Ç—å
        sell_condition = (rsi > self.overbought) & (rsi < rsi.shift(1))
        signals[sell_condition] = -1

        return signals